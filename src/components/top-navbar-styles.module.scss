@use "wood-theme" as wood;
@use "global-variables" as globals;


//variables
$drawerTopHeight: globals.$navbar-height;
$drawerExpandedHeight: 75vh;
$transitionTime: 0.5s;

/*
  When the user has a wide screen (>900px), the full navbar is visible.

  There are only 2 layers to worry about for the z-index:

  z-index: 1
    This is the drawerTopContainer, which sits under all other navbar elements
    and forms the background of the navbar.
  
  z-index: 2
    The nav and logo elements are on this layer and appear above the drawerTopContainer.
    
  When the screen size is reduced to 768px or less, the nav element will
  get moved to z-index: 0 so that it can serve as a dropdown menu for mobile users.
*/

.header {
  display: flex;
  flex-direction: row;
  align-items: normal; //center flex items on vertical axis
  justify-content: space-between; //first and last elements go to leftmost and rightmost sides respectively

  //needed so that when nav element moves down and up, the header moves at the same rate as the nav element to avoid clipping off parts of the nav element
  transition: height $transitionTime; 

  //must be highest z-index because this element must always remain above its
  //sibling elements: TopNavbar and Footer, as well as all other elements on the page
  z-index: 100;

  //use position fixed instead of position sticky so that 
  //navbar is always on top and does not affect the positions
  //of other elements
  position: fixed;
  left: 0;
  top: 0; //for position: sticky to work, at least one of the following properties must be specified: top, left, right, bottom.
  width: 100%;
  height: $drawerTopHeight;

  padding: globals.$navbar-padding;
  padding-bottom: 0px;
  overflow: hidden; //prevents user from interacting with elements outside of the borders of this element

  background: transparent; //nav element already has background to use

  //represents the top of a drawer, is on the z-index
  //below the logo and links and the z-index above the drawer bottom
  .drawerTopContainer {
    z-index: 1;
    position: absolute; //prevents container from interfering with positions of other sibling elements
    top: 0;
    left: 0;
    width: 100%;
    height: $drawerTopHeight;
    @include wood.straight-grain-1-walnut-light-bg(0deg);
  }

  .logo-container {
    text-decoration: none;

    //must calculate height to fit text so that it
    //does not overflow into other elements
    height: calc($drawerTopHeight - globals.$navbar-padding);
    
    z-index: 2; //logo stays above all other elements in navbar


    .name {
      display: block;
      color: wood.$basswood-light0;
      text-align: center;
      white-space: nowrap; //dont let text wrap around
      font-size: 1.7em;
    }
  }

  //nav background is used to render a border background from the wood theme SASS file
  //behind the navbar dropdown
  .navBackground {
    //when in wide-screen mode, make it have the highest z-index so that links can be seen
    z-index: 2; 
    height: 100%;
    transition: transform $transitionTime; //make sure transition is same as the one used for the header dropdown


    //this is where all links and socials are displayed
    .nav {
      display: flex;
      flex-direction: row;

      /* 
      Distribute items evenly
      Items have a half-size space
      on either end.
      */
      justify-content: space-around;  

      
      overflow: hidden;

      .link {
        text-decoration: none;
        color: wood.$basswood-light0;
        font-weight: bold;
        white-space: nowrap; //dont let text wrap around

        padding: 0.5em 1em 0.5em 1em;
      }

      .social-container {
        display: flex;
        padding: 0;
    
        a {
          display: inline-block; //required so that it expands to fit imgs
          padding: 5px;
        }
    
        .icons {
          width: 32px;
          height: 32px;
          mask-size: cover; //expand SVG to fill entire div
          background: wood.$basswood-light0; //color of SVG
        }

        //use masks so that color of SVG can match the background.
        .iconEmail {
          mask-image: url("/iconmonstr-email-10.svg");
        }
        .iconGithub {
          mask-image: url("/iconmonstr-github-4.svg");
        }
        .iconLinkedin {
          mask-image: url("/iconmonstr-linkedin-4.svg");
        }
      }
    }
  }
  

  //basic hamburger menu that turns into an X when pressed.
  .hamburger {
    position: relative; //required before using children with position: absolute
    display: none;
    width: 40px;
    height: 30px;
    z-index: 2; //stays above all elements in navbar
    background-color: transparent;
    cursor: pointer;

    //these are the 3 bars in the hamburger menu
    * {
      position: absolute;
      background-color: wood.$basswood-light0;
      border-radius: 2px;
      width: 100%;
      height: 4px;
      transition: all $transitionTime;
    }

    :nth-child(1) {
      top: 0px;
    }

    :nth-child(2) {
      top: 13px; //placed so bar is directly in middle of 15px height (bar covered 13px-17px)
    }

    :nth-child(3) {
      top: 26px; //because height=4px, the bottom of the bar will reach the bottom of the hamburger border 
    }
  }

  //class .x indicates that the hamburger menu should form an x
  .hamburger.x {
    :nth-child(1) {
      rotate: 45deg; //Rotate to form a forward slash \
      top: 15px; //put at center of hamburger wrapper
    }
    :nth-child(2) {
      width: 0; //shrink second bar down to 0
    }
    :nth-child(3) {
      rotate: -45deg; //Rotate to form a backslash /
      top: 15px; //put at center of hamburger wrapper
    }
  }

  
}

//used for tablet screens

//looks the same as the header above, except the 
//social-container in the nav element is removed.
@media screen and (max-width: 900px) {
  .header {
    .navBackground {
      .nav {
        //dont display the list of socials when in tablet mode
        .social-container {
          display: none;
        }
      }
    }
  }
}

/*

  This is only for when the viewport width is less than 768px:

  The navbar can be split into 3 layers on the z-axis:

  * z-index: 0 (Bottom layer)
    The nav element is at this layer when its dropdown is expanded.
    

  * z-index: 1 (Middle layer)
    These elements appear on top of the bottom layer and cover up
    the elements below it.
    - The drawerTopContainer is drawn over the nav element so that 
    the user cannot see that the nav elements is positioned directly
    under the drawerTopContainer. Once the nav element extends down,
    the nav container does not block the drawerTopContainer, giving
    the illusion of opening a drawer.

  * z-index 2 (Top layer)
    The logo and hamburger menu appear on top of all other navbar elements
    since they must be visible to the user at all times.

  When the header is not given a .dropdown class, only Layers
  1 and 2 are visible. The nav element at Layer 0 is positioned offscreen
  above the navbar.

  When the header is given a .dropdown class, the nav element at Layer 0
  moves down until the top of the container reaches the bottom of the drawetTopContainer.
*/

//used for phone screens
@media screen and (max-width: 768px) {
  .header {

    .hamburger {
      display: block; //make the hamburger display visible.
    }

    //adjust the navbar as it would appear when the dropdown class is in the header.
    //because overflow: hidden in the header, the navbar cannot be seen or interacted with until
    //the user selects the hamburger menu
    .navBackground {
      position: absolute;
      top: $drawerTopHeight;
      left: 0;
      width: 100%;
      height: calc($drawerExpandedHeight - $drawerTopHeight);
      z-index: 0; //move to lowest z-index so that the logo, hamburger, and drawerTopContainer are above this element

      //move up into the drawerTopContainer by 100% of nav's height.
      //because the top of the nav is right at the bottom of
      //the drawerTopContainer, it is completely hidden

      transform: translateY(-100%); 

      @include wood.straight-grain-1-walnut-light-border-bg(20px, $top: false);
      
      .nav {
        display: block;
        height: 100%;

        @include wood.straight-grain-1-ebony-light-bg(0deg, 25%);

        overflow-x: hidden;

        //if there are too many rows to fit in nav dropdown,
        //allow the user to scroll.
        overflow-y: scroll; 

        .link {
          display: block; //make elements of navbar display up to down instead of left to right
          padding: 1em;

          margin: 0 10px;
          margin-top: 10px;
          border-radius: 10px;
        }

        .social-container {
          display: block;
          @include wood.straight-grain-1-walnut-light-bg(0deg);

          margin: 0 10px;
          margin-top: 10px;
          border-radius: 10px;
        }

        //add a partially transparent black background so that each odd child element appears
        //to have a slightly darker background compared to the navbar background color.
        //NOTE. USE > to only select the children of .social-container and not its grandchildren.
        > :nth-child(odd) {
          @include wood.straight-grain-1-walnut-dark-bg(0deg);

        }

        > :nth-child(even) {
          @include wood.straight-grain-1-walnut-light-bg(0deg);
        }
      }
    }
    
  }

  //when the dropdown class is added to header, move the header to the bottom of the viewport
  .header.dropdown {
    height: $drawerExpandedHeight;
    .navBackground {
      //move the nav container down so that the entire container is visible.
      //this creates the illusion of someone opening a drawer and looking at what's inside.
      transform: translateY(0);
    
    }
  }
}
